"""
Задание 1.
Реализуйте свои пользовательские функции, в которых реализуйте:
a) заполнение списка и словаря,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
   И укажите сложность каждой ф-ции, которую вы применяете для заполнения.
   У этих ф-ций может быть разная сложность. Поэтому время заполнения списка и словаря может как совпадать, так и отличаться.
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему
   И укажите сложность ф-ций, которые вы используете для операций.
   Операцию clear() не используем.
Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)
Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
"""

import time


def my_func(func):
    def times(*args, **kwargs):
        start = time.perf_counter()
        for i in range(10 ** 5):
            func(*args, i)
        finish = time.perf_counter()
        print('Время исполнения: {: }'.format(finish - start))

    return times


my_mass1 = []
my_mass2 = {}


@my_func
def list_add(list, tmp=0):
    return list.append(tmp)


@my_func
def dict_add(dict, tmp=0):
    dict[tmp] = dict.get(tmp, 0)


result_list = list_add(my_mass1)
print(result_list)

result_dict = dict_add(my_mass2)
print(result_dict)


## Сложность обеих функций по заполнению O(1) с учетом tmp 10**5
## Заполнение списка происходит быстрее, не сильно, но быстрее.

